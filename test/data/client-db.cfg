process CLIENT = {

      module ecalMonitorClient = EcalBarrelMonitorClient{
#        untracked string outputFile = 'EcalBarrelMonitorClient.root'
        untracked string dbName = "ecalh4db"
        untracked string dbHostName = "pccmsecdb.cern.ch"
        untracked string dbUserName = "test06"
        untracked string dbPassword = "oratest06"
        untracked string location = "H4"
        untracked string baseHtmlDir = "."
#        untracked bool collateSources = true
#        untracked bool cloneME = false
#        untracked bool enableSubRun = true
#        untracked bool enableExit = false
#        untracked bool enableMonitorDaemon = false
#        untracked string prefixME = ""
        untracked string prefixME = "Collector/FU0/"
#        untracked string prefixME = "EvF/FU0/"
        untracked string clientName = "EcalBarrelMonitorClient"
        untracked string hostName = "localhost"
        untracked int32  hostPort = 9090
#        untracked bool enableServer = true
#        untracked int32 serverPort = 9900
#        untracked bool verbose = true
        untracked vint32 superModules = { 01 }
      }

      path p = { ecalMonitorClient }

      source = DummySource{
        untracked int32 maxEvents = -1
      }

      service = MessageLogger{
        untracked vstring destinations = { "cout" }
#        untracked vstring debugModules = { "ecalMonitorClient" }
#        untracked vstring debugModules = { "*" }
        untracked vstring categories = { "EcalBarrelClient" }

        untracked PSet cout = {
          untracked string threshold = "INFO"
          untracked PSet default = { untracked int32 limit = 0 }
          untracked PSet EcalBarrelClient = { untracked int32 limit = 0 }
          untracked bool noTimeStamps = true
          untracked bool noLineBreaks = true
                              }
      }

}
